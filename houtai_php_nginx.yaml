kind: Service # 对象类型
apiVersion: v1 # api 版本
metadata: # 元数据
  name: php-fpm-nginx #Service 服务名
spec:
  type: NodePort # 类型为nodeport
  selector: #标签选择器
    app: php-fpm-nginx 
  ports: #端口信息
    - port: 80  # 容器端口80
      protocol: TCP #tcp类型
      targetPort: 80 # Service 将 nginx 容器的 80 端口暴露出来
---
kind: ConfigMap # 对象类型
apiVersion: v1 # api 版本
metadata: # 元数据
  name: nginx-config # 对象名称
data: # key-value 数据集合
  nginx.conf: | # 将 nginx config 配置写入 ConfigMap 中，经典的 php-fpm 代理设置，这里就不再多说了
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        keepalive_timeout  65;

        server {
                listen        80;
                root   /var/www/html/public;

                location / {
                    index index.php index.html;
                    error_page 400 /error/400.html;
                    error_page 403 /error/403.html;
                    error_page 404 /error/404.html;
                    error_page 500 /error/500.html;
                    error_page 501 /error/501.html;
                    error_page 502 /error/502.html;
                    error_page 503 /error/503.html;
                    error_page 504 /error/504.html;
                    error_page 505 /error/505.html;
                    error_page 506 /error/506.html;
                    error_page 507 /error/507.html;
                    error_page 509 /error/509.html;
                    error_page 510 /error/510.html;
                    autoindex  off;
                                if (!-e $request_filename) {
                                        rewrite  ^/(.*)$  /index.php/$1  last;
                                        break;
                                }
                }
                location ~ \.php(.*)$ {
                    fastcgi_pass   127.0.0.1:9000;
                    fastcgi_index  index.php;
                    fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;
                    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
                    fastcgi_param  PATH_INFO  $fastcgi_path_info;
                    fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;
                    include        fastcgi_params;
                }
        }
        include /etc/nginx/conf.d/*.conf;
    }
---
kind: Deployment # 对象类型
apiVersion: apps/v1 # api 版本
metadata: # 元数据
  name: php-fpm-nginx # Deployment 对象名称
spec: # Deployment 对象规约
  selector: # 选择器
    matchLabels: # 标签匹配
      app: php-fpm-nginx
  replicas: 1 # 副本数量
  template: # 模版
    metadata: # Pod 对象的元数据
      labels: # Pod 对象的标签
        app: php-fpm-nginx
    spec: # Pod 对象规约
      containers: # 这里设置了两个容器
        - name: php-fpm # 第一个容器名称
          image: compose-api-73-php:latest # 容器镜像
          imagePullPolicy: IfNotPresent #镜像拉取策略
          livenessProbe: # 存活探测
            initialDelaySeconds: 5 # 容器启动后要等待多少秒后才启动存活和就绪探测器
            periodSeconds: 10 # 每多少秒执行一次存活探测
            tcpSocket: # 监测tcp端口
              port: 9000 #监测端口
          readinessProbe: # 就绪探测
            initialDelaySeconds: 5 # 容器启动后要等待多少秒后才启动存活和就绪探测器
            periodSeconds: 10 # 每多少秒执行一次存活探测
            tcpSocket: # 监测tcp端口
              port: 9000 #监测端口
          resources: # 资源约束
            requests: # 最小限制
              memory: "64Mi" # 内存最新64M 
              cpu: "250m" # CPU最大使用0.25核
            limits: # 最大限制
              memory: "128Mi" # 内存最新128M 
              cpu: "500m" # CPU最大使用0.5核
          ports:
            - containerPort: 9000 # php-fpm 端口
          volumeMounts: # 挂载数据卷
            - mountPath: /var/www/html # 挂载两个容器共享的 volume 
              name: nginx-www
          lifecycle: # 生命周期
            postStart: # 当容器处于 postStart 阶段时，执行一下命令
              exec:
                command: ["/bin/sh", "-c", "echo startup..."] # 将 /app/index.php 复制到挂载的 volume 
            preStop:
              exec:
                command:
                  - sh
                  - '-c'
                  - sleep 5 && kill -SIGQUIT 1 # 优雅退出
        # - name: redis
        #   image: redis
        #   imagePullPolicy: IfNotPresent
        #   resources: # 资源约束
        #     requests: # 最小限制
        #       memory: "64Mi" # 内存最新64M 
        #       cpu: "250m" # CPU最大使用0.25核
        #     limits: # 最大限制
        #       memory: "128Mi" # 内存最新128M 
        #       cpu: "500m" # CPU最大使用0.5核
        #   ports:
        #     - containerPort: 6379 # redis 端口
        - name: nginx # 第二个容器名称
          image: nginx # 容器镜像
          imagePullPolicy: IfNotPresent
          resources: # 资源约束
            requests: # 最小限制
              memory: "64Mi" # 内存最新64M 
              cpu: "250m" # CPU最大使用0.25核
            limits: # 最大限制
              memory: "128Mi" # 内存最新128M 
              cpu: "500m" # CPU最大使用0.5核
          ports:
            - containerPort: 80 # nginx 端口
          volumeMounts: # nginx 容器挂载了两个 volume，一个是与 php-fpm 容器共享的 volume，另外一个是配置了 nginx.conf 的 volume
            - mountPath: /var/www/html # 挂载两个容器共享的 volume 
              name: nginx-www
            - mountPath: /etc/nginx/nginx.conf #  挂载配置了 nginx.conf 的 volume
              subPath: nginx.conf
              name: nginx-config
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - '-c'
                  - sleep 5 && /usr/sbin/nginx -s quit # 优雅退出
      volumes:
        - name: nginx-www # 网站文件通过nfs挂载
          hostPath:
            path: /Users/zhuyimin/php/houtai_xiaobu
          # nfs:
          #   path: /html/
          #   server: 192.168.1.123
        - name: nginx-config 
          configMap: # configMap 
            name: nginx-config
